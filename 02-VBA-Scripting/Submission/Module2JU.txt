Sub doStonks()

    ' for each row
    ' add the total VOLUME
    ' check if next row is the same STOCK
    ' if it isn't, we've reached the total
    ' write out to column I and L
    ' reset the counter
    
    Dim currStock As String
    Dim totalVolume As Double
    Dim nextStock As String
    Dim row As Long
    Dim summaryRow As Integer
    Dim lastRow As Long
    
    Dim openPrice As Double
    Dim closePrice As Double
    Dim yearlyChange As Double
    Dim percentChange As Double
    
    Dim ws As Worksheet
    
    ' Loop through all of the worksheets in the active workbook.
    For Each ws In Worksheets
        ' column headers
        ws.Cells(1, 9).Value = "Ticker"
        ws.Cells(1, 10).Value = "Yearly Change"
        ws.Cells(1, 11).Value = "Percent Change"
        ws.Cells(1, 12).Value = "Total Volume"

    
        ' defaults
        totalVolume = 0
        summaryRow = 2
        lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row
        
        ' first stock's open price
        openPrice = ws.Cells(2, 3).Value
        
        ' loop through worksheet
        For row = 2 To lastRow
            currStock = ws.Cells(row, 1).Value
            nextStock = ws.Cells(row + 1, 1).Value
            
            ' add total
            totalVolume = totalVolume + ws.Cells(row, 7).Value
        
            If nextStock <> currStock Then
                ' get close price
                closePrice = ws.Cells(row, 6).Value
                yearlyChange = closePrice - openPrice
                
                ' divide by 0 error handling
                If openPrice = 0 Then
                    percentChange = 0 ' can be a NAN or NULL or !#VAL
                Else
                    percentChange = yearlyChange / openPrice
                End If
            
                ' write to summary table
                ws.Cells(summaryRow, 9).Value = currStock
                ws.Cells(summaryRow, 10).Value = yearlyChange
                ws.Cells(summaryRow, 11).Value = percentChange
                ws.Cells(summaryRow, 12).Value = totalVolume
                
                ' conditional formatting
                If yearlyChange < 0 Then
                    ws.Cells(summaryRow, 10).Interior.ColorIndex = 3
                    ws.Cells(summaryRow, 11).Interior.ColorIndex = 3
                Else
                    ws.Cells(summaryRow, 10).Interior.ColorIndex = 4
                    ws.Cells(summaryRow, 11).Interior.ColorIndex = 4
                End If
                
                ' reset
                totalVolume = 0
                summaryRow = summaryRow + 1
                
                ' open price of next stock
                openPrice = ws.Cells(row + 1, 3).Value
            End If
        
        Next row
        
        ' Another for loop
        ' summarize the summary table
        Dim lastSummaryRow As Long
        Dim greatestVolume As Double
        Dim greatestVolumeStock As String
        Dim greatestIncrease As Double
        Dim greatestIncreaseStock As String
        Dim greatestDecrease As Double
        Dim greatestDecreaseStock As String
        
        ' defaults
        lastSummaryRow = ws.Cells(ws.Rows.Count, 9).End(xlUp).row
        greatestVolume = ws.Cells(2, 12).Value
        greatestVolumeStock = ws.Cells(2, 9).Value
        
        greatestIncrease = ws.Cells(2, 11).Value
        greatestIncreaseStock = ws.Cells(2, 9).Value
        
        greatestDecrease = ws.Cells(2, 11).Value
        greatestDecreaseStock = ws.Cells(2, 9).Value
        
        For row = 2 To lastSummaryRow
        
            ' check for new greatest volume
            If ws.Cells(row, 12).Value > greatestVolume Then
                greatestVolume = ws.Cells(row, 12).Value
                greatestVolumeStock = ws.Cells(row, 9).Value
            End If
            
            ' check for new greatest change
            If ws.Cells(row, 11).Value > greatestIncrease Then
                greatestIncrease = ws.Cells(row, 11).Value
                greatestIncreaseStock = ws.Cells(row, 9).Value
            End If
            
            ' check for new worst decrease
            If ws.Cells(row, 11).Value < greatestDecrease Then
                greatestDecrease = ws.Cells(row, 11).Value
                greatestDecreaseStock = ws.Cells(row, 9).Value
            End If
        
        Next row
        
        ' we're done
        ws.Cells(1, 16).Value = "Ticker"
        ws.Cells(1, 17).Value = "Value"
        ws.Cells(2, 15).Value = "Greatest % Increase"
        ws.Cells(2, 16).Value = greatestIncreaseStock
        ws.Cells(2, 17).Value = greatestIncrease
        ws.Cells(2, 17).NumberFormat = "0.00%" ' make a percent
        
        ws.Cells(3, 15).Value = "Greatest % Decrease"
        ws.Cells(3, 16).Value = greatestDecreaseStock
        ws.Cells(3, 17).Value = greatestDecrease
        ws.Cells(3, 17).NumberFormat = "0.00%" ' make a percent
        
        ws.Cells(4, 15).Value = "Greatest Total Volume"
        ws.Cells(4, 16).Value = greatestVolumeStock
        ws.Cells(4, 17).Value = greatestVolume
        
        
        ' style the columns
        ws.Range("J2:J" & summaryRow).NumberFormat = "$0.00"
        ws.Range("K2:K" & summaryRow).NumberFormat = "0.00%"
    Next
End Sub
